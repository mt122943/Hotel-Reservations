paths:
  x_train_path: 'data/processed/X_train.csv'
  x_test_path: 'data/processed/X_test.csv'
  y_train_path: 'data/processed/y_train.csv'
  y_test_path: 'data/processed/y_test.csv'
  results_path: 'artefacts/final_model_results.csv'
  features_selected_path: "artefacts/features_selected.csv"
  features_selection_results_path: "artefacts/features_selection_results.csv"
  model_results_path: "artefacts/model_results.csv"
  logistic_regression_model_path: "models/logistic_regression_model.pkl"
  random_forest_base_model_path: "models/random_forest_base_model.pkl"
  random_forest_model_path: "models/random_forest_model.pkl"

forward_selection_params:
  k_features: 'auto'  # Set this to the number of features you want to select, e.g., 5
  scoring: 'accuracy'
  cv: 5
  random_state: 42
  n_jobs: 4  # Maximum number of iterations for the logistic regression model

backward_selection_params:
  k_features: 'auto'
  scoring: 'accuracy'
  cv: 5
  random_state: 42
  n_jobs: 50  # Maximum number of iterations for the logistic regression model

stepwise_selection_params:
  k_features: 'auto'
  scoring: 'accuracy'
  cv: 5
  random_state: 42
  n_jobs: 50  # Maximum number of iterations for the logistic regression model

logistic_regression_params:
  max_iter: 10000
  random_state: 42
  solver: 'liblinear'  # Use 'liblinear' solver for small datasets

grid_search_params:
  param_grid:
    C: [0.001, 0.01, 0.1, 1, 10, 100]
    solver: ['liblinear', 'saga']
  cv: 5
  scoring: 'accuracy'


random_forest_params:
  n_estimators: [100, 200, 300]
  max_depth: [10, 20, 30]
  min_samples_split: [2, 10, 20]
  min_samples_leaf: [1, 5, 10]
